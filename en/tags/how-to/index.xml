<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>How-To on Liberation Notes</title>
    <link>https://blog.cmwang.net/en/tags/how-to/</link>
    <description>Recent content in How-To on Liberation Notes</description>
    <image>
      <title>Liberation Notes</title>
      <url>https://blog.cmwang.net/47</url>
      <link>https://blog.cmwang.net/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 14 Oct 2023 21:13:26 +0800</lastBuildDate><atom:link href="https://blog.cmwang.net/en/tags/how-to/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Setup Gitlab Runner in Container</title>
      <link>https://blog.cmwang.net/en/posts/2023/10/install-gitlab-runner/</link>
      <pubDate>Sat, 14 Oct 2023 21:13:26 +0800</pubDate>
      
      <guid>https://blog.cmwang.net/en/posts/2023/10/install-gitlab-runner/</guid>
      <description>Setup Gitlab Runner in Container</description>
      <content:encoded><![CDATA[<ol>
<li>Use local system volume mounts to start the runner container.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">docker run -d --name gitlab-runner --restart always <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -v /srv/gitlab-runner/config:/etc/gitlab-runner <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -v /var/run/docker.sock:/var/run/docker.sock <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  gitlab/gitlab-runner:latest
</span></span></code></pre></div><ol start="2">
<li>Create a group runner with a runner <code>authentication token</code>.</li>
</ol>
<p><img loading="lazy" src="1.png" alt="group runner"  />
</p>
<p>👉 <em>Add group runner tag</em></p>
<p><img loading="lazy" src="2.png" alt="add tag"  />
</p>
<p>👉 <em>Get authentication token</em></p>
<p><img loading="lazy" src="3.png" alt="get token"  />

You may refer to this <a href="https://docs.gitlab.com/ee/ci/runners/runners_scope.html#create-a-group-runner-with-a-runner-authentication-token">article</a>.</p>
<ol start="3">
<li>Register a runner</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="nv">RUNNER_TOKEN</span><span class="o">=</span><span class="s2">&#34;glrt-vTJPYBaajfypaShJH2xx&#34;</span>
</span></span><span class="line"><span class="cl">docker run --rm -v /srv/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner register <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --non-interactive <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --url <span class="s2">&#34;https://gitlab.com/&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --token <span class="s2">&#34;</span><span class="nv">$RUNNER_TOKEN</span><span class="s2">&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --executor <span class="s2">&#34;docker&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --docker-image docker:stable-dind <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --description <span class="s2">&#34;docker-runner&#34;</span>
</span></span></code></pre></div><ol start="4">
<li>Edit <code>/srv/gitlab-runner/config/config.toml</code></li>
</ol>
<p>Modify the following configurations:</p>
<ul>
<li><code>concurrent</code>: optional</li>
<li><code>privileged</code></li>
<li><code>volumes</code>: docker in docker</li>
<li><code>network_mode</code>: optional</li>
</ul>


<div class="terminal space shadow">
    <div class="top">
        <div class="btns">
            <span class="circle red"></span>
            <span class="circle yellow"></span>
            <span class="circle green"></span>
        </div>
        <div class="title">
            /srv/gitlab-runner/config/config.toml
        </div>
    </div>
    <div class="terminalbody"><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"><span class="nx">concurrent</span> <span class="p">=</span> <span class="mi">4</span> <span class="c"># change</span>
</span></span><span class="line"><span class="cl"><span class="nx">check_interval</span> <span class="p">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="nx">shutdown_timeout</span> <span class="p">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">session_server</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="nx">session_timeout</span> <span class="p">=</span> <span class="mi">1800</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[[</span><span class="nx">runners</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">  <span class="nx">name</span> <span class="p">=</span> <span class="s2">&#34;docker-runner&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">url</span> <span class="p">=</span> <span class="s2">&#34;https://gitlab.com/&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">id</span> <span class="p">=</span> <span class="mi">28470179</span>
</span></span><span class="line"><span class="cl">  <span class="nx">token</span> <span class="p">=</span> <span class="s2">&#34;glrt-vTJPYBaajfypaShJH2Ge&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">token_obtained_at</span> <span class="p">=</span> <span class="ld">2023-10-14T12:45:43Z</span>
</span></span><span class="line"><span class="cl">  <span class="nx">token_expires_at</span> <span class="p">=</span> <span class="ld">0001-01-01T00:00:00Z</span>
</span></span><span class="line"><span class="cl">  <span class="nx">executor</span> <span class="p">=</span> <span class="s2">&#34;docker&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">[</span><span class="nx">runners</span><span class="p">.</span><span class="nx">cache</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="nx">MaxUploadedArchiveSize</span> <span class="p">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">  <span class="p">[</span><span class="nx">runners</span><span class="p">.</span><span class="nx">docker</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="nx">tls_verify</span> <span class="p">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">    <span class="nx">image</span> <span class="p">=</span> <span class="s2">&#34;docker:stable-dind&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nx">privileged</span> <span class="p">=</span> <span class="kc">true</span> <span class="c"># change</span>
</span></span><span class="line"><span class="cl">    <span class="nx">disable_entrypoint_overwrite</span> <span class="p">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">    <span class="nx">oom_kill_disable</span> <span class="p">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">    <span class="nx">disable_cache</span> <span class="p">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">    <span class="c">#volumes = [&#34;/cache&#34;] # change</span>
</span></span><span class="line"><span class="cl">    <span class="nx">volumes</span> <span class="p">=</span> <span class="p">[</span><span class="s2">&#34;/cache&#34;</span><span class="p">,</span> <span class="s2">&#34;/var/run/docker.sock:/run/docker.sock&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="nx">shm_size</span> <span class="p">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    <span class="nx">network_mode</span> <span class="p">=</span> <span class="s2">&#34;host&#34;</span> <span class="c"># add</span>
</span></span></code></pre></div></div>
</div>
<br />

<ol start="6">
<li>Restart Runner</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">docker restart gitlab-runner
</span></span></code></pre></div><h2 id="references">References</h2>
<ul>
<li><a href="https://docs.gitlab.com/runner/install/">Install GitLab Runner</a></li>
<li><a href="https://docs.gitlab.com/runner/install/docker.html">Run GitLab Runner in a container</a></li>
<li><a href="https://docs.gitlab.com/runner/register/index.html">Registering runners </a></li>
<li><a href="https://docs.gitlab.com/ee/ci/runners/runners_scope.html#create-a-group-runner-with-a-runner-authentication-token">Create a group runner with a runner authentication token</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Configuring a custom domain for your GitHub Pages site</title>
      <link>https://blog.cmwang.net/en/posts/2023/10/custom-domain-for-github-pages/</link>
      <pubDate>Fri, 13 Oct 2023 14:02:18 +0800</pubDate>
      
      <guid>https://blog.cmwang.net/en/posts/2023/10/custom-domain-for-github-pages/</guid>
      <description>This article show you how to set up a custom domain for a GitHub Page, using Godaddy as an example.</description>
      <content:encoded><![CDATA[<p>Setting up a CNAME for your GitHub Pages does not require additional payment, but you need to have a private domain first. Here, we assume that we have already purchased a domain from <a href="https://www.godaddy.com/">Godaddy</a>, so let&rsquo;s go to the <a href="https://sg.godaddy.com/help/manage-dns-records-680">Godaddy DNS settings page</a> to configure it.</p>
<ol>
<li>First, query GitHub&rsquo;s IP address via Terminal:</li>
</ol>


<div class="terminal space shadow">
    <div class="top">
        <div class="btns">
            <span class="circle red"></span>
            <span class="circle yellow"></span>
            <span class="circle green"></span>
        </div>
        <div class="title">
            dig {Your Domain}.github.io
        </div>
    </div>
    <div class="terminalbody"><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">dig xxxx.github.io
</span></span></code></pre></div></div>
</div>
<br />

<p><img loading="lazy" src="4.png" alt="dig"  />
</p>
<ol start="2">
<li>Go to the Godaddy DNS page and set up 4 <code>A Records</code> and 1 <code>CNAME Record</code>, please refer to the image.</li>
</ol>
<p><img loading="lazy" src="3.png" alt="godaddy setting"  />
</p>
<ol start="3">
<li>Add a <code>CNAME</code> file with <code>xxx.{Domain Name}</code> to the private repo, ex. <code>blog.xxx.com</code>.</li>
</ol>
<p><img loading="lazy" src="5.png" alt="CNAME File"  />
</p>
<ol start="4">
<li>Set up CNAME on the page and check the <code>Enforce HTTPS</code> option.</li>
</ol>
<p><img loading="lazy" src="1.png" alt="github pages"  />

<img loading="lazy" src="2.png" alt="custom domain setting"  />
</p>
<p>It might take some time to take effect. If everything is set up correctly, the DNS Check in step 4 should pass.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site">Managing a custom domain for your GitHub Pages site</a></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Hugo Deployment Guide</title>
      <link>https://blog.cmwang.net/en/posts/2023/10/hugo-get-started/</link>
      <pubDate>Tue, 10 Oct 2023 20:01:46 +0800</pubDate>
      
      <guid>https://blog.cmwang.net/en/posts/2023/10/hugo-get-started/</guid>
      <description>This guide will walk you through the process of creating a private website on GitHub and deploying it to GitHub Pages</description>
      <content:encoded><![CDATA[<p>Welcome to the world of Hugo, where you can swiftly create your personal website! This guide will walk you through the process of creating a private website on GitHub and deploying it to GitHub Pages.</p>
<h2 id="whats-included-in-this-guide">What&rsquo;s included in this guide</h2>
<ul>
<li><code>.gitignore</code>: Excludes files from version control.</li>
<li><code>.github/workflows/hugo.yml</code>: Uses GitHub Actions to deploy your private Hugo repository to a public GitHub Pages repository.</li>
</ul>
<h2 id="steps">Steps</h2>
<ol>
<li>
<p>Create a private repository <code>hugo-site</code> on <a href="https://github.com/">GitHub</a> to manage your website source code, ensuring to include the README.md file.</p>
</li>
<li>
<p>Create a public repository <code>{YOUR_USER_NAME}.github.io</code> on <a href="https://github.com/">GitHub</a> to upload your static web pages to <a href="https://pages.github.com/">GitHub Pages</a>.</p>
</li>
<li>
<p>Clone <code>hugo-site</code> to your local machine:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">git clone https://github.com/<span class="o">{</span>YOUR_USER_NAME<span class="o">}</span>/hugo-site.git
</span></span></code></pre></div><p>Alternatively, if you are using Git Submodules:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">git clone --recursive https://github.com/<span class="o">{</span>YOUR_USER_NAME<span class="o">}</span>/hugo-site.git
</span></span></code></pre></div></li>
<li>
<p>Create a Hugo project in the same directory as <code>hugo-site</code> (not inside <code>hugo-site</code>):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">hugo new site hugo-site --force
</span></span></code></pre></div></li>
<li>
<p>Add an example theme. Here, we&rsquo;ll use PaperMod as an example:</p>
</li>
</ol>


<div class="terminal space shadow">
    <div class="top">
        <div class="btns">
            <span class="circle red"></span>
            <span class="circle yellow"></span>
            <span class="circle green"></span>
        </div>
        <div class="title">
            Add theme
        </div>
    </div>
    <div class="terminalbody"><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="nb">cd</span> hugo-site
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">git submodule add --depth<span class="o">=</span><span class="m">1</span> https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;theme : &#39;PaperMod&#39;&#34;</span> &gt;&gt; hugo.yaml
</span></span></code></pre></div></div>
</div>
<br />

<ol start="6">
<li>
<p>Copy the <a href="https://raw.githubusercontent.com/taka-wang/example-hugo-site/main/.gitignore">.gitignore</a> file into <code>hugo-site</code>.</p>
</li>
<li>
<p>[Optional] Set up GitHub Action for automatic deployment:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"> mkdir -p .github/workflows/
</span></span><span class="line"><span class="cl"> touch .github/workflows/hugo.yml
</span></span></code></pre></div><p>Copy the contents of <a href="https://raw.githubusercontent.com/taka-wang/example-hugo-site/main/.github/workflows/hugo.yml">hugo.yml</a> into the newly created <code>hugo.yml</code> file. Remember to modify these two parts:</p>
<ul>
<li><strong>token: ${{ secrets.ACCESS_TOKEN }}</strong>: Use a personal access token for this private repository.</li>
<li><strong>repository-name: YOUR_USER_NAME}}/YOUR_USER_NAME.github.io</strong>: Replace <code>YOUR_USER_NAME</code> with your GitHub username.</li>
</ul>
</li>
<li>
<p>Test your Hugo website:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">hugo server -D
</span></span></code></pre></div></li>
<li>
<p>Start writing your own posts:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">hugo new posts/20231006/index.md
</span></span></code></pre></div><p>Begin writing in <code>index.md</code> inside <code>content/posts/20231006</code>, and place images in the same folder.</p>
</li>
<li>
<p>Congratulations, you&rsquo;ve configured your private repository! Don&rsquo;t forget to commit your changes to the private repository. Best of luck creating your beautiful website!</p>
</li>
</ol>
<h2 id="references">References</h2>
<ul>
<li><a href="https://github.com/JamesIves/github-pages-deploy-action/issues/624#issuecomment-791982883">How to setup ACCESS Token</a></li>
<li><a href="https://blog.euc-rt.me/post/github-actions-publish-private-hugo-repo-to-public-pages-site/">Using GitHub Actions to Publish Hugo Site From Private to Public Repo</a></li>
<li><a href="https://gohugo.io/getting-started/quick-start/">Learn to create a Hugo site in minutes.</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>How to Install Hugo</title>
      <link>https://blog.cmwang.net/en/posts/2023/10/how-to-install-hugo/</link>
      <pubDate>Tue, 10 Oct 2023 19:41:05 +0800</pubDate>
      
      <guid>https://blog.cmwang.net/en/posts/2023/10/how-to-install-hugo/</guid>
      <description>We will introduce how to install hugo on your system in this post.</description>
      <content:encoded><![CDATA[<h2 id="macos">MacOS</h2>
<p>Installing via <code>Homebrew</code> Package Manager is the most convenient method.</p>


<div class="terminal space shadow">
    <div class="top">
        <div class="btns">
            <span class="circle red"></span>
            <span class="circle yellow"></span>
            <span class="circle green"></span>
        </div>
        <div class="title">
            Install Packages with Homebrew on macOS
        </div>
    </div>
    <div class="terminalbody"><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1"># install homebrew</span>
</span></span><span class="line"><span class="cl">/bin/bash -c <span class="s2">&#34;</span><span class="k">$(</span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="k">)</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># install hugo</span>
</span></span><span class="line"><span class="cl">brew install hugo
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># verify hugo installation</span>
</span></span><span class="line"><span class="cl">hugo version
</span></span><span class="line"><span class="cl">&gt; hugo v0.119.0-b84644c008e0dc2c4b67bd69cccf87a41a03937e+extended darwin/amd64 <span class="nv">BuildDate</span><span class="o">=</span>2023-09-24T15:20:17Z <span class="nv">VendorInfo</span><span class="o">=</span>brew
</span></span></code></pre></div></div>
</div>
<br />

<h2 id="windows">Windows</h2>
<p>Open <strong>powershell</strong> with Task Manager: Press <code>win + x</code>, navigate to Windows PowerShell (Admin), make sure to select <strong>Run as administrator</strong>.</p>
<p>Check the execution policy:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Get-ExecutionPolicy
</span></span></code></pre></div><p>If it shows <strong>Restricted</strong>, run the following command:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Set-ExecutionPolicy AllSigned
</span></span></code></pre></div><p>Install Chocolatey:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">Set-ExecutionPolicy Bypass -Scope Process -Force<span class="p">;</span> iex <span class="o">((</span>New-Object System.Net.WebClient<span class="o">)</span>.DownloadString<span class="o">(</span><span class="s1">&#39;https://chocolatey.org/install.ps1&#39;</span><span class="o">))</span>
</span></span></code></pre></div><p>Verify the installation by typing in <strong>powershell</strong>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">choco
</span></span><span class="line"><span class="cl"><span class="c1"># If you receive a response, the installation is successful</span>
</span></span></code></pre></div><p>Now, you can install Hugo using Chocolatey! 👇👇👇</p>


<div class="terminal space shadow">
    <div class="top">
        <div class="btns">
            <span class="circle red"></span>
            <span class="circle yellow"></span>
            <span class="circle green"></span>
        </div>
        <div class="title">
            Install Packages with Chocolatey on Windows
        </div>
    </div>
    <div class="terminalbody"><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1"># install hugo</span>
</span></span><span class="line"><span class="cl">choco install hugo-extended
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># verify hugo installation</span>
</span></span><span class="line"><span class="cl">hugo version
</span></span><span class="line"><span class="cl">&gt; hugo v0.119.0-b84644c008e0dc2c4b67bd69cccf87a41a03937e...
</span></span></code></pre></div></div>
</div>
<br />

<hr>
<h2 id="references">References</h2>
<ul>
<li><a href="https://gohugo.io/installation/macos/">Install Hugo on macOS</a></li>
<li><a href="https://gohugo.io/installation/windows/">Install Hugo on Windows</a></li>
<li><a href="https://blog.darkthread.net/blog/choco-install-notes-for-new-windows/">我的 Windows 新裝機 Chocolatey 安裝清單</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
